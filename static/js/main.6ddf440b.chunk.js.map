{"version":3,"sources":["components/ui/FormComponents/Button/Button.module.scss","App/App.module.scss","App/Header/Header.module.scss","components/ui/Modal/Modal.module.scss","components/ui/Panel/Panel.module.scss","components/ui/Spinner/Spinner.module.scss","App/Header/cf_logo.svg","components/ui/Link/Link.module.scss","App/Summary/Summary.module.scss","components/hooks/useEventListener.ts","components/hooks/useWindowScrollPosition.ts","App/Header/Header.tsx","components/ui/Link/Link.tsx","components/ui/Modal/Modal.tsx","components/hooks/useKeyPress.ts","components/ui/Panel/Panel.tsx","components/ui/Spinner/Spinner.tsx","components/ui/FormComponents/Button/Button.tsx","App/Summary/Summary.tsx","App/Main/Lorem.tsx","App/Main/Main.tsx","components/ui/Modal/useModal.tsx","App/index.ts","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","_w","getPosition","x","pageXOffset","y","pageYOffset","Header","props","className","isSmall","useState","position","setPosition","positionX","positionY","useWindowScrollPosition","classNames","styles","header","header__small","header_content","header_logo","src","logo","alt","Link","caption","href","target","rel","link","Modal","children","onDismiss","escIsPressed","targetKey","keyPressed","setKeyPressed","key","keyCode","useKeyPress","document","body","classList","add","body_hasModal","remove","closeModal","ReactDOM","createPortal","modal_BG","modal","onClick","Panel","panel","Section","theme","section","Spinner","size","spinner","viewBox","cx","cy","r","Button","disabled","loading","form","outline","type","isClickable","btn","btn__outline","btn__hasCaption","btn__isLoading","btn__disabled","aria-label","btn_spinner","Group","btnList","Content","footer","Main","isVisible","setIsVisible","hiddeModal","showModal","useModal","Lorem","App","body_main","body_aside","Boolean","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ddf440b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2P4zC\",\"btn_spinner\":\"Button_btn_spinner__2QqSo\",\"btn__outline\":\"Button_btn__outline__2NrRa\",\"btn__disabled\":\"Button_btn__disabled__9f1yp\",\"btnList\":\"Button_btnList__153Y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Qkcrw\",\"header\":\"App_header__26d5-\",\"body\":\"App_body__HYcj3\",\"body_main\":\"App_body_main__1VU8B\",\"body_aside\":\"App_body_aside__3xuAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ABzs\",\"header_content\":\"Header_header_content__3i5YW\",\"header_logo\":\"Header_header_logo__1yK_n\",\"header__small\":\"Header_header__small__RYmCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_hasModal\":\"Modal_body_hasModal__2bu0B\",\"modal\":\"Modal_modal__1z7i3\",\"fadeIn\":\"Modal_fadeIn__1hwE8\",\"modal_BG\":\"Modal_modal_BG__-kWIB\",\"fadeI_BG\":\"Modal_fadeI_BG__1xUQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Panel_panel__RUG4W\",\"section\":\"Panel_section__3F5hO\",\"section__theme_dark\":\"Panel_section__theme_dark__302Ui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Yt6Y\",\"rotate\":\"Spinner_rotate__1_OR7\",\"dash\":\"Spinner_dash__17UK9\",\"spinner__lg\":\"Spinner_spinner__lg__32xr2\",\"spinner__xs\":\"Spinner_spinner__xs__TLbf4\",\"spinner__sm\":\"Spinner_spinner__sm__2lIA6\",\"spinner__xl\":\"Spinner_spinner__xl__7ZaNf\"};","module.exports = __webpack_public_path__ + \"static/media/cf_logo.1d56699e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__1zkkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Summary_footer__3KJF3\"};","import { useRef, useEffect } from \"react\";\r\n\r\nconst useEventListener = (\r\n  eventName: string,\r\n  handler: any,\r\n  element: any = window\r\n) => {\r\n  // Create a ref that stores handler\r\n  const savedHandler: any = useRef();\r\n\r\n  // Update ref.current value if handler changes.\r\n  // This allows our effect below to always get latest handler ...\r\n  // ... without us needing to pass it in effect deps array ...\r\n  // ... and potentially cause effect to re-run every render.\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    // Make sure element supports addEventListener\r\n    const isSupported = element && element.addEventListener;\r\n    if (!isSupported) return;\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener = (event: any) => savedHandler.current(event);\r\n\r\n    // Add event listener\r\n    element.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      element.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element]); // Re-run if eventName or element changes\r\n};\r\n\r\nexport { useEventListener };\r\n","import { useState /*, useEffect*/ } from \"react\";\r\nimport { useEventListener } from \"./useEventListener\";\r\n\r\nconst _w = window;\r\nconst getPosition = () => ({\r\n  x: _w.pageXOffset,\r\n  y: _w.pageYOffset\r\n});\r\n\r\nconst useWindowScrollPosition = () => {\r\n  const [position, setPosition] = useState(getPosition());\r\n\r\n  const handleScroll = () => {\r\n    setPosition(getPosition());\r\n  };\r\n\r\n  useEventListener(\"scroll\", handleScroll, window);\r\n\r\n  return {\r\n    position,\r\n    positionX: position.x,\r\n    positionY: position.y\r\n  };\r\n};\r\n\r\nexport { useWindowScrollPosition };\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useWindowScrollPosition } from \"components/hooks\";\r\nimport styles from \"./Header.module.scss\";\r\nimport logo from \"./cf_logo.svg\";\r\n\r\nconst Header = (props: any) => {\r\n  const { className } = props;\r\n  const { positionY } = useWindowScrollPosition();\r\n  const isSmall = positionY > 60;\r\n\r\n  return (\r\n    <header\r\n      className={classNames(\r\n        styles.header,\r\n        isSmall && styles.header__small,\r\n        className\r\n      )}\r\n    >\r\n      <div className={styles.header_content}>\r\n        <img className={styles.header_logo} src={logo} alt=\"CurrencyFair\" />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { ILink } from \"./Link.interfaces\";\r\nimport styles from \"./Link.module.scss\";\r\n\r\nconst Link = (props: ILink) => {\r\n  const { caption, href, className, target = \"_blank\", rel } = props;\r\n\r\n  return (\r\n    <a\r\n      href={href}\r\n      target={target}\r\n      rel={rel}\r\n      className={classNames(styles.link, className)}\r\n    >\r\n      {caption}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport { Link };\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useKeyPress } from \"components/hooks\";\r\nimport { IModal } from \"./Modal.interfaces\";\r\nimport styles from \"./Modal.module.scss\";\r\n\r\nconst KEY_ESC = 27;\r\n\r\nconst Modal = (props: IModal) => {\r\n  const { children, onDismiss = () => {} } = props;\r\n  const escIsPressed = useKeyPress(KEY_ESC);\r\n\r\n  useEffect(() => {\r\n    // When on screen, block the page scroll\r\n    document.body.classList.add(styles.body_hasModal);\r\n\r\n    return () => {\r\n      document.body.classList.remove(styles.body_hasModal);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Remove the Modal from the screen when ESC is pressed\r\n    escIsPressed && closeModal();\r\n  }, [escIsPressed]);\r\n\r\n  const closeModal = () => {\r\n    onDismiss();\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={styles.modal_BG} />\r\n      <div className={styles.modal}>\r\n        <div onClick={closeModal}>close me</div>\r\n        {children}\r\n      </div>\r\n    </>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport { Modal };\r\n","import { useState } from \"react\";\r\nimport { useEventListener } from \"components/hooks\";\r\n\r\nconst useKeyPress = (targetKey: string | number) => {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  const downHandler = ({ key, keyCode }: any) => {\r\n    if (key === targetKey || keyCode === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  };\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key, keyCode }: any) => {\r\n    if (key === targetKey || keyCode === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEventListener(\"keydown\", downHandler, window);\r\n  useEventListener(\"keyup\", upHandler, window);\r\n\r\n  return keyPressed;\r\n};\r\n\r\nexport { useKeyPress };\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { IPanel, IPanelSection } from \"./Panel.interfaces\";\r\nimport styles from \"./Panel.module.scss\";\r\n\r\nconst Panel = ({ children, className }: IPanel) => (\r\n  <section className={classNames(styles.panel, className)}>{children}</section>\r\n);\r\n\r\nconst PanelSection = ({ children, theme, className }: IPanelSection) => (\r\n  <div\r\n    className={classNames(\r\n      styles.section,\r\n      theme && styles[`section__theme_${theme}`],\r\n      className\r\n    )}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPanel.Section = PanelSection;\r\n\r\nexport { Panel };\r\n","import React from \"react\";\nimport classNames from 'classnames';\nimport { ISpinner } from \"./Spinner.interfaces\";\nimport styles from './Spinner.module.scss';\n\nconst Spinner = (props: ISpinner) => {\n  const { className, size } = props;\n\n  return (\n    <div className={classNames(\n      styles.spinner,\n      styles[`spinner__${size}`],\n      className\n    )}>\n      <svg viewBox=\"0 0 66 66\">\n        <circle cx=\"33\" cy=\"33\" r=\"30\" />\n      </svg>\n    </div>\n  );\n};\n\nexport { Spinner };\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Spinner } from \"components/ui\";\nimport { IButton, IButtonGroup } from \"./Button.interfaces\";\nimport styles from \"./Button.module.scss\";\n\nconst Button = (props: IButton) => {\n  const {\n    caption,\n    className,\n    disabled = false,\n    loading = false,\n    form,\n    onClick,\n    outline = false,\n    alt = caption,\n    type = \"button\"\n  } = props;\n\n  const isClickable = !disabled && !loading;\n\n  const onClickHandler = () => {\n    if (isClickable) {\n      onClick();\n    }\n  };\n\n  return (\n    <button\n      className={classNames(\n        styles.btn,\n        outline && styles.btn__outline,\n        caption && styles.btn__hasCaption,\n        loading && styles.btn__isLoading,\n        disabled && styles.btn__disabled,\n        className\n      )}\n      type={type}\n      aria-label={alt}\n      form={form}\n      onClick={onClick && onClickHandler}\n      disabled={disabled}\n    >\n      {caption}\n      {loading && <Spinner className={styles.btn_spinner} />}\n    </button>\n  );\n};\n\nconst ButtonGroup = ({ children, className }: IButtonGroup) => (\n  <div className={classNames(styles.btnList, className)}>{children}</div>\n);\n\nButton.Group = ButtonGroup;\n\nexport { Button };\n","import React from \"react\";\r\nimport { Panel } from \"components/ui\";\r\nimport styles from \"./Summary.module.scss\";\r\n\r\nconst Content = ({ className }: any) => (\r\n  <div className={className}>\r\n    <Panel>\r\n      <Panel.Section theme=\"dark\">Sending Details</Panel.Section>\r\n      <Panel.Section>You send....</Panel.Section>\r\n      <Panel.Section theme=\"dark\">Receiving Details</Panel.Section>\r\n      <Panel.Section>Rate...</Panel.Section>\r\n      <Panel.Section className={styles.footer}>\r\n        You save £66.19 compared to your bank!\r\n      </Panel.Section>\r\n    </Panel>\r\n  </div>\r\n);\r\n\r\nexport { Content };\r\n","import React from \"react\";\r\n\r\nexport default () => (\r\n  <>\r\n    <span>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos corrupti\r\n      alias aliquid itaque pariatur esse, nihil explicabo vero illo nisi\r\n      corporis quisquam cum, cupiditate a minus amet? Ullam, quam tempore.\r\n    </span>\r\n    <span>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos corrupti\r\n      alias aliquid itaque pariatur esse, nihil explicabo vero illo nisi\r\n      corporis quisquam cum, cupiditate a minus amet? Ullam, quam tempore.\r\n    </span>\r\n    <span>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos corrupti\r\n      alias aliquid itaque pariatur esse, nihil explicabo vero illo nisi\r\n      corporis quisquam cum, cupiditate a minus amet? Ullam, quam tempore.\r\n    </span>\r\n    <span>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos corrupti\r\n      alias aliquid itaque pariatur esse, nihil explicabo vero illo nisi\r\n      corporis quisquam cum, cupiditate a minus amet? Ullam, quam tempore.\r\n    </span>\r\n    <span>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos corrupti\r\n      alias aliquid itaque pariatur esse, nihil explicabo vero illo nisi\r\n      corporis quisquam cum, cupiditate a minus amet? Ullam, quam tempore.\r\n    </span>\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport { Button, useModal, Link } from \"components/ui\";\r\n// import styles from \"./App.module.scss\";\r\nimport Lorem from \"./Lorem\";\r\n\r\nconst Main = (props: any) => {\r\n  const { className } = props;\r\n  const { Modal, showModal } = useModal();\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Modal>I have some custom content</Modal>\r\n      <div>\r\n        <Button.Group>\r\n          <Button caption=\"Next\" onClick={showModal} />\r\n          <Button caption=\"Outline\" outline />\r\n        </Button.Group>\r\n        <Button caption=\"Disabled\" disabled />\r\n        <Button caption=\"Loading\" loading />\r\n        <Link caption=\"Go somewhere\" href=\"bla bla\" />\r\n        <Lorem />\r\n        <Lorem />\r\n        <Lorem />\r\n        <Lorem />\r\n        <Lorem />\r\n        <Lorem />\r\n        <Lorem />\r\n        <Lorem />\r\n        <Lorem /> <Lorem /> <Lorem /> <Lorem /> <Lorem />\r\n        <Button caption=\"Outline\" outline />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Main };\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"./Modal\";\r\nimport { IModal } from \"./Modal.interfaces\";\r\n\r\n/**\r\n * Hook returning <Modal /> component and its controllers\r\n *\r\n */\r\n\r\nconst useModal = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const hiddeModal = () => setIsVisible(false);\r\n  const showModal = () => setIsVisible(true);\r\n\r\n  return {\r\n    Modal: (props: IModal) =>\r\n      isVisible ? <Modal onDismiss={hiddeModal} {...props} /> : null,\r\n    showModal,\r\n    hiddeModal\r\n  };\r\n};\r\n\r\nexport { useModal };\r\n","import { App } from \"./App\";\r\n\r\nexport default App;\r\nexport { App };\r\n","import React from \"react\";\r\nimport { Header } from \"./Header\";\r\nimport { Summary } from \"./Summary\";\r\nimport { Main } from \"./Main\";\r\nimport styles from \"./App.module.scss\";\r\n\r\n// General layout distribution\r\nconst App: React.FC = () => (\r\n  <div className={styles.App}>\r\n    <Header className={styles.header} />\r\n    <div className={styles.body}>\r\n      <div className={styles.body_main}>\r\n        <Main />\r\n      </div>\r\n      <div className={styles.body_aside}>\r\n        <Summary />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport { App };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/styles/main.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}